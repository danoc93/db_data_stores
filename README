README
All the files have been grouped in folders: code, executables, experiments, data, storage, report.

==========================

EXECUTABLES
* Located under 'executables', used for 'experiments'.
* To recreate: cd into 'code' -> call make all -> make move.
* Can be re-generated/called individually for whatever purposes, I just put them there to make the experiments faster.

==========================

EXPERIMENTS
* A .sh file was created for each of the individual executables. 
* You simply need to update the root folder for this whole bundle, and they will work smoothly.
* These can be found under the 'experiments' folder.
* You can change these files to add more / less page sizes.
* For most of the experiment files we use 'time' because it gave me more accurate values in general. 
* They tend to grep a subset of stdout to make things cleaner. For full output, run files individually.

Comment: write_fixed_len_pages, read_fixed_len_page. They have their own internal timers.
* All the files were tested with the same array of page sizes.

SPECIFICS ABOUT EXPERIMENTS

* Enumeration:
0     1     2
|-----|-----|----|... <-  All enumeration and ID's start at 0.

* Record identifiers:
Record identifiers take the following form: PAGEID.SLOTID
e.g. RID 5.1.

Therefore they must be feed using that format into whatever executable requires one.


==========================

DATA
* Three csv data sets were used for the whole testing: 2000, 500, 50.
* For example, we inserted all the data in set 500 into the heapfile that included the dataset 2000.
* These sample datasets were generated randomly and are included in the 'data' folder.


==========================

STORAGE
* Used by the experiments to store / read the files generated by other experiments.

==========================

REPORT
A pdf under 'report', includes all the tables, charts and commentaries required by the experiments.

==========================